version: '3.8'

services:
  # PostgreSQL database for storing customer data
  postgres:
    image: postgres:14
    environment:
      POSTGRES_USER: mlops
      POSTGRES_PASSWORD: mlopspass
      POSTGRES_DB: churn_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "mlops"]
      interval: 5s
      timeout: 5s
      retries: 5

  # LocalStack for mimicking AWS services
  localstack:
    image: localstack/localstack:latest
    ports:
      - "4566:4566"
    environment:
      - SERVICES=s3,sqs,lambda,iam
      - DEBUG=1
      - DATA_DIR=/tmp/localstack/data
    volumes:
      - ./localstack/init.sh:/docker-entrypoint-initdb.d/init.sh
      - localstack_data:/tmp/localstack

  # MLflow server for experiment tracking
  mlflow:
    build:
      context: ../
      dockerfile: docker/Dockerfile.mlflow
    ports:
      - "5000:5000"
    environment:
      - MLFLOW_TRACKING_URI=postgresql://mlops:mlopspass@postgres:5432/churn_db
      - MLFLOW_S3_ENDPOINT_URL=http://localstack:4566
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
    depends_on:
      - postgres
      - localstack

  # Prediction API service
  api:
    build:
      context: ../
      dockerfile: docker/Dockerfile.api
    ports:
      - "8000:8000"
    environment:
      - MODEL_URI=s3://models/churn-model/latest
      - DB_URI=postgresql://mlops:mlopspass@postgres:5432/churn_db
      - MLFLOW_TRACKING_URI=http://mlflow:5000
      - S3_ENDPOINT_URL=http://localstack:4566
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
    depends_on:
      - mlflow
      - postgres

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - api

  # Grafana for metrics visualization
  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus

  # Jupyter Lab for development and exploration
  jupyter:
    build:
      context: ../
      dockerfile: docker/Dockerfile.jupyter
    ports:
      - "8888:8888"
    volumes:
      - ../notebooks:/home/jovyan/notebooks
      - ../src:/home/jovyan/src
    environment:
      - MLFLOW_TRACKING_URI=http://mlflow:5000
      - DB_URI=postgresql://mlops:mlopspass@postgres:5432/churn_db
      - S3_ENDPOINT_URL=http://localstack:4566
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
    depends_on:
      - mlflow
      - postgres
      - localstack

volumes:
  postgres_data:
  localstack_data:
  grafana_data:
