# Example pipeline configuration file: pipelines/credit_risk_model.yaml

name: credit_risk_model
version: "1.0"
description: "Credit risk prediction model pipeline"
owner: "data_science_team"

parameters:
  train_data_path: "data/credit_data_train.csv"
  test_data_path: "data/credit_data_test.csv"
  feature_columns:
    - "loan_amount"
    - "interest_rate"
    - "loan_term"
    - "credit_score"
    - "annual_income"
    - "debt_to_income"
    - "employment_length"
  target_column: "default_status"
  test_size: 0.2
  random_state: 42

steps:
  - name: data_validation
    description: "Validate input data quality"
    type: data_validation
    config:
      input_data: "{{ parameters.train_data_path }}"
      validation_rules:
        - rule: "not_null"
          columns: 
            - "{{ parameters.target_column }}"
            - "credit_score"
            - "annual_income"
        - rule: "range_check"
          column: "credit_score"
          min_value: 300
          max_value: 850
        - rule: "range_check"
          column: "interest_rate"
          min_value: 0
          max_value: 30
    outputs:
      validation_report: "artifacts/data_validation_report.json"

  - name: feature_engineering
    description: "Prepare features for model training"
    type: feature_engineering
    depends_on:
      - data_validation
    config:
      input_data: "{{ parameters.train_data_path }}"
      feature_columns: "{{ parameters.feature_columns }}"
      target_column: "{{ parameters.target_column }}"
      transformations:
        - name: "missing_value_imputer"
          type: "imputer"
          config:
            strategy: "median"
            columns:
              - "annual_income"
              - "employment_length"
        - name: "outlier_handler"
          type: "winsorize"
          config:
            columns:
              - "loan_amount"
              - "annual_income"
            limits: [0.01, 0.99]
        - name: "categorical_encoder"
          type: "one_hot"
          config:
            columns:
              - "loan_term"
    outputs:
      processed_data: "artifacts/processed_train_data.parquet"
      feature_transformers: "artifacts/feature_transformers.pkl"
  
  - name: model_training
    description: "Train machine learning model"
    type: model_training
    depends_on:
      - feature_engineering
    config:
      input_data: "{{ steps.feature_engineering.outputs.processed_data }}"
      feature_columns: "{{ parameters.feature_columns }}"
      target_column: "{{ parameters.target_column }}"
      algorithm: "xgboost"
      hyperparameters:
        learning_rate: 0.1
        max_depth: 5
        n_estimators: 100
        objective: "binary:logistic"
      cv_folds: 5
    outputs:
      trained_model: "artifacts/credit_risk_model.pkl"
      training_metrics: "artifacts/training_metrics.json"
  
  - name: model_evaluation
    description: "Evaluate model on test data"
    type: model_evaluation
    depends_on:
      - model_training
    config:
      model_path: "{{ steps.model_training.outputs.trained_model }}"
      test_data: "{{ parameters.test_data_path }}"
      feature_transformers: "{{ steps.feature_engineering.outputs.feature_transformers }}"
      target_column: "{{ parameters.target_column }}"
      metrics:
        - "accuracy"
        - "precision"
        - "recall"
        - "f1"
        - "roc_auc"
        - "confusion_matrix"
    outputs:
      evaluation_report: "artifacts/evaluation_report.json"
  
  - name: model_explanation
    description: "Generate model explanations"
    type: model_explanation
    depends_on:
      - model_evaluation
    config:
      model_path: "{{ steps.model_training.outputs.trained_model }}"
      test_data: "{{ parameters.test_data_path }}"
      feature_transformers: "{{ steps.feature_engineering.outputs.feature_transformers }}"
      explanation_method: "shap"
    outputs:
      explanation_report: "artifacts/explanation_report.json"
      feature_importance_plot: "artifacts/feature_importance.png"
  
  - name: model_packaging
    description: "Package model for deployment"
    type: model_packaging
    depends_on:
      - model_training
      - model_evaluation
    config:
      model_path: "{{ steps.model_training.outputs.trained_model }}"
      feature_transformers: "{{ steps.feature_engineering.outputs.feature_transformers }}"
      model_metrics: "{{ steps.model_evaluation.outputs.evaluation_report }}"
      package_type: "docker"
      model_name: "credit-risk-predictor"
      model_version: "{{ context.run_id }}"
    outputs:
      model_package: "artifacts/credit-risk-predictor-package.tar.gz"
      deployment_config: "artifacts/deployment_config.yaml"
