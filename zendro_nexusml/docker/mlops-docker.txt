# Dockerfile
FROM python:3.10-slim

# Set the working directory
WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    curl \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements file
COPY requirements.txt .

# Install Python dependencies
RUN pip install --no-cache-dir -r requirements.txt

# Copy the application code
COPY . .

# Make directories for data, models, and logs
RUN mkdir -p data models logs

# Expose port for API
EXPOSE 8000

# Set environment variables
ENV PYTHONPATH=/app

# Set the entrypoint script
ENTRYPOINT ["python", "run.py"]

# docker-compose.yml
version: '3.8'

services:
  postgres:
    image: postgres:14
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: churn_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
    networks:
      - ml_network

  localstack:
    image: localstack/localstack:latest
    ports:
      - "4566:4566"
    environment:
      - SERVICES=s3
      - DEFAULT_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
    volumes:
      - localstack_data:/tmp/localstack
      - ./scripts/init_localstack.sh:/docker-entrypoint-initdb.d/init_localstack.sh
    networks:
      - ml_network

  ml_training:
    build: .
    depends_on:
      - postgres
      - localstack
    volumes:
      - ./data:/app/data
      - ./models:/app/models
      - ./logs:/app/logs
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=churn_db
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - AWS_ENDPOINT_URL=http://localstack:4566
      - MODEL_TYPE=random_forest
    command: python run.py train
    networks:
      - ml_network

  ml_api:
    build: .
    depends_on:
      - postgres
      - localstack
    ports:
      - "8000:8000"
    volumes:
      - ./models:/app/models
      - ./logs:/app/logs
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=churn_db
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - AWS_ENDPOINT_URL=http://localstack:4566
      - API_HOST=0.0.0.0
      - API_PORT=8000
    command: python deploy.py api
    networks:
      - ml_network

  ml_monitoring:
    build: .
    depends_on:
      - postgres
      - localstack
      - ml_api
    volumes:
      - ./models:/app/models
      - ./logs:/app/logs
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=churn_db
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - AWS_ENDPOINT_URL=http://localstack:4566
      - MONITORING_INTERVAL=3600
    command: python monitoring.py
    networks:
      - ml_network

networks:
  ml_network:
    driver: bridge

volumes:
  postgres_data:
  localstack_data:

# scripts/init_db.sql
-- Create table for customer data
CREATE TABLE IF NOT EXISTS customer_data